<?xml version="1.0" ?>
<SAVED_DATA>
	<bookmarks>
		<jdbcDriver className="org.apache.derby.jdbc.EmbeddedDriver" name="Apache Derby Embedded JDBC Driver" type="DERBY" version="10.3.1.4 - (561794)">
			<jar fileName="C:/bjd/eclipse/plugins/com.quantum.derby_3.3.10/lib/derby.jar" />
		</jdbcDriver>
		<jdbcDriver className="oracle.jdbc.OracleDriver" name="Oracle JDBC driver" type="ORACLE" version="11.2.0.2.0">
			<jar fileName="C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib\ojdbc6.jar" />
		</jdbcDriver>
		<bookmark>
			<name>HR</name>
			<username>HR</username>
			<password>1111</password>
			<prompt>false</prompt>
			<connect>jdbc:oracle:thin:@localhost:1521:xe</connect>
			<autoCommit>true</autoCommit>
			<autoCommitPreference>Always True</autoCommitPreference>
			<autoCommitIgnoreView>false</autoCommitIgnoreView>
			<quoteAll>false</quoteAll>
			<sendQueryAsIs>false</sendQueryAsIs>
			<stripNewline>false</stripNewline>
			<shutdownOnDisconnect>false</shutdownOnDisconnect>
			<defaultEncoding />
			<driver>oracle.jdbc.OracleDriver</driver>
			<type>ORACLE</type>
			<substituteVariables>false</substituteVariables>
			<variablesRegexp>\$\{(.*?)\}</variablesRegexp>
			<driverLocation>C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib\ojdbc6.jar</driverLocation>
			<Other_Schemas schemaRule="useDefault" />
			<quickList />
			<queryList>
				<query>
					<queryString>select d.department_id 부서번호, d.department_name 부서명, l.city 도시, round(avg(e.salary),0) 평균월급
from departments d, locations l , employees e
where d.department_id = e.department_id 
and l.location_id = d.location_id
group by d.department_id, d.department_name,l.city</queryString>
				</query>
				<query>
					<queryString>select d.department_id 부서번호, d.department_name 부서명, l.city 도시, round(avg(e.salary),0) 평균월급
from departments d, locations l , employees e
where d.department_id = e.department_id 
and l.location_id = d.location_id
group by d.department_id, d.department_name,l.city
having avg(e.salary) between 6000 and 9000</queryString>
				</query>
				<query>
					<queryString>select d.department_id 부서번호, d.department_name 부서명, l.city 도시, round(avg(e.salary),0) 평균월급
from departments d, locations l , employees e
where d.department_id = e.department_id 
and l.location_id = d.location_id
group by d.department_id, d.department_name,l.city
having avg(e.salary) between 6000 and 9000
order by 4 desc</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name || e.last_name 
from employees e</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 
from employees e</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, e.manager_id
from employees e , jobs j</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, e.manager_id
from employees e , jobs j
where e.job_id = j.job_id</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, e.manager_id
from employees e , jobs j
where e.job_id = j.job_id
and e.manager_id = 108</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, e.manager_id
from employees e , jobs j
where e.job_id = j.job_id
and j.job_title='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, e.manager_id
from employees e , jobs j, departments d
where e.job_id = j.job_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, e.manager_id
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
e.first_name||' '||e.last_name 상사명 
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
e.manager_id 상사명 
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
decode(e.manager_id,101, 'hh')
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
decode(e.manager_id,101, 'Neena Kochhar')
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
decode(e.manager_id,101, 'Neena Kochhar', e.manager_id, 108, 'Nancy Greenberg')
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
decode(e.manager_id,101, 'Neena Kochhar', e.manager_id,108, 'Nancy Greenberg')
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
decode(e.manager_id,101, 'Neena Kochhar',108,'dd')
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
decode(e.manager_id,101, 'Neena Kochhar',108,'Nancy Greenberg')
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
				<query>
					<queryString>select e.employee_id 사번, e.first_name ||' '|| e.last_name 사원성명 , j.job_title 직업명, 
decode(e.manager_id,101, 'Neena Kochhar',108,'Nancy Greenberg') 상사명
from employees e , jobs j, departments d
where e.job_id = j.job_id and d.department_id = e.department_id
and d.department_name='Finance'</queryString>
				</query>
			</queryList>
		</bookmark>
		<bookmark>
			<name>(Internal) Derby</name>
			<username>QUANTUM</username>
			<password />
			<prompt>false</prompt>
			<connect>jdbc:derby:C:/bjd/eclipse/plugins/com.quantum.derby_3.3.10/data/quantum</connect>
			<autoCommit>true</autoCommit>
			<autoCommitPreference>Always True</autoCommitPreference>
			<autoCommitIgnoreView>false</autoCommitIgnoreView>
			<quoteAll>false</quoteAll>
			<sendQueryAsIs>false</sendQueryAsIs>
			<stripNewline>false</stripNewline>
			<shutdownOnDisconnect>true</shutdownOnDisconnect>
			<defaultEncoding />
			<driver>org.apache.derby.jdbc.EmbeddedDriver</driver>
			<type>DERBY</type>
			<substituteVariables>false</substituteVariables>
			<variablesRegexp>\$\{(.*?)\}</variablesRegexp>
			<driverLocation>C:/bjd/eclipse/plugins/com.quantum.derby_3.3.10/lib/derby.jar</driverLocation>
			<Other_Schemas schemaRule="useAll" />
			<quickList />
			<queryList />
		</bookmark>
		<bookmark>
			<name>TEST</name>
			<username>TEST</username>
			<password>1111</password>
			<prompt>false</prompt>
			<connect>jdbc:oracle:thin:@localhost:1521:xe</connect>
			<autoCommit>true</autoCommit>
			<autoCommitPreference>Always True</autoCommitPreference>
			<autoCommitIgnoreView>false</autoCommitIgnoreView>
			<quoteAll>false</quoteAll>
			<sendQueryAsIs>false</sendQueryAsIs>
			<stripNewline>false</stripNewline>
			<shutdownOnDisconnect>false</shutdownOnDisconnect>
			<defaultEncoding />
			<driver>oracle.jdbc.OracleDriver</driver>
			<type>ORACLE</type>
			<substituteVariables>false</substituteVariables>
			<variablesRegexp>\$\{(.*?)\}</variablesRegexp>
			<driverLocation>C:\oraclexe\app\oracle\product\11.2.0\server\jdbc\lib\ojdbc6.jar</driverLocation>
			<Other_Schemas schemaRule="useDefault" />
			<quickList />
			<queryList>
				<query>
					<queryString>INSERT INTO movies(no,name,release_date,end_date,director,audience_num,genre)
VALUES(movies_seq.nextval,'월-E','2008-07-30','2008-10-01','앤드류 스탠튼',1320830,3)</queryString>
				</query>
				<query>
					<queryString>INSERT INTO movies(no,name,release_date,end_date,director,audience_num,genre)
VALUES(movies_seq.nextval,'인셉션','2010-07-21','2010-10-27','크리스토퍼 놀란',5926948,4)</queryString>
				</query>
				<query>
					<queryString>INSERT INTO movies(no,name,release_date,end_date,director,audience_num,genre)
VALUES(movies_seq.nextval,'다크나이트','2008-08-06','2008-10-01','크리스토퍼 놀란',4087355,6)</queryString>
				</query>
				<query>
					<queryString>INSERT INTO movies(no,name,release_date,end_date,director,audience_num,genre)
VALUES(movies_seq.nextval,'인터스텔라','2014-11-06','2015-02-21','크리스토퍼 놀란',10304503,1)</queryString>
				</query>
				<query>
					<queryString>INSERT INTO movies(no,name,release_date,end_date,director,audience_num,genre)
VALUES(movies_seq.nextval,'위플래쉬','2015-03-12','2015-03-21','다미엔 차젤레',1589048,2)</queryString>
				</query>
				<query>
					<queryString>INSERT INTO movies(no,name,release_date,end_date,director,audience_num,genre)
VALUES(movies_seq.nextval,'라라랜드','2016-12-07','2017-04-19','다미엔 차젤레',3570389,8)</queryString>
				</query>
				<query>
					<queryString>CREATE table &quot;IDOLS&quot; (
&quot;IDOL_ID&quot; NUMBER(6,0) NOT NULL,
&quot;NAME&quot; VARCHAR2(30) NOT NULL,
&quot;HEIGHT&quot; NUMBER(4,1) NOT NULL,
&quot;WEIGHT&quot; NUMBER(4,1) NOT NULL,
&quot;BIRTH_DATE&quot; DATE NOT NULL,
&quot;AGENT_NAME&quot; VARCHAR2(100),
&quot;GENDER&quot; CHAR(1) NOT NULL,
&quot;GROUP_ID&quot; NUMBER(5,0) NOT NULL,
constraint &quot;IDOLS_PK&quot; primary key (&quot;IDOL_ID&quot;)
)</queryString>
				</query>
				<query>
					<queryString>CREATE table &quot;GROUPS&quot; (
&quot;GROUP_ID&quot; NUMBER(5,0) NOT NULL,
&quot;NAME&quot; VARCHAR2(200) NOT NULL,
&quot;DEBUT_DATE&quot; DATE NOT NULL,
constraint &quot;GROUPS_PK&quot; primary key (&quot;GROUP_ID&quot;)
)</queryString>
				</query>
				<query>
					<queryString>ALTER TABLE &quot;IDOLS&quot; ADD CONSTRAINT &quot;IDOLS_FK&quot;
FOREIGN KEY (&quot;GROUP_ID&quot;)
REFERENCES &quot;GROUPS&quot; (&quot;GROUP_ID&quot;)</queryString>
				</query>
				<query>
					<queryString>INSERT INTO groups(group_id, name, debut_date)
VALUES(1, '방탄소년단', '2016-8-8')</queryString>
				</query>
				<query>
					<queryString>INSERT INTO groups(group_id, name, debut_date)
VALUES(2, '블랙핑크', '2016-8-8')</queryString>
				</query>
				<query>
					<queryString>INSERT INTO groups(group_id,name,debut_date)
VALUES (3,'레드벨벳','2014-08-01')</queryString>
				</query>
				<query>
					<queryString>INSERT INTO idols(idol_id,name,height,weight,birth_date,agent_name,gender, group_id)
VALUES(1,'슈가',174,57,'1993-03-09','빅히트','M',1)</queryString>
				</query>
				<query>
					<queryString>insert into idols(idol_id,name,height,weight,birth_date,agent_name,gender,group_id)
values(2,'제니',163,45,'1996-01-16','YG','W','2')</queryString>
				</query>
				<query>
					<queryString>INSERT INTO idols(idol_id, name, height, weight,
birth_date, agent_name,gender, group_id)
VALUES(3, '진', 179, 60, '1992-12-04', '빅히트', 'M', '1')</queryString>
				</query>
				<query>
					<queryString>INSERT INTO idols(idol_id,name,height,weight,birth_date,agent_name,
gender, group_id)
VALUES(4,'아이린',158,45,'1991-3-29','SM','W',3)</queryString>
				</query>
				<query>
					<queryString>INSERT INTO idols(idol_id,name,height,weight,birth_date,agent_name,gender,group_id)
VALUES(5, '로제',168, 46,'1997-02-11','YG','W',2)</queryString>
				</query>
				<query>
					<queryString>INSERT INTO idols(idol_id, name, height, weight,
birth_date, agent_name,
gender, group_id)
VALUES(6,'제이홉',177,59,'1994-02-18','빅히트','M',1)</queryString>
				</query>
				<query>
					<queryString>create sequence &quot;GROUPS_SEQ&quot;
start with 4
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder</queryString>
				</query>
				<query>
					<queryString>create sequence &quot;IDOLS_SEQ&quot; start with 6
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder</queryString>
				</query>
			</queryList>
		</bookmark>
	</bookmarks>
</SAVED_DATA>